{"version":3,"sources":["Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","handleEditClick","map","todo","className","text","onClick","id","App","useState","localStorage","getItem","JSON","parse","setTodos","setTodo","isEditing","setIsEditing","currentTodo","setCurrentTodo","useEffect","setItem","stringify","onSubmit","e","preventDefault","updatedTodo","console","log","length","updatedItem","alert","handleUpdateTodo","type","value","placeholder","onChange","target","uuid","newTodo","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAuBeA,EApBD,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBAEhC,OACI,8BAEQF,EAAMG,KAAI,SAACC,GAAD,OACN,sBAAmBC,UAAU,OAA7B,UACI,+BAAQD,EAAKE,OACb,sBAAKD,UAAU,cAAf,UACI,wBAAQA,UAAU,MAAME,QAAS,kBAAML,EAAgBE,IAAvD,kBACA,wBAAQC,UAAU,MAAME,QAAS,kBAAMN,EAAWG,EAAKI,KAAvD,yBAJEJ,EAAKI,UCyHpBC,MA7Hf,WAGE,MAA0BC,oBAAS,WACjC,IAAMX,EAAQY,aAAaC,QAAQ,SAEnC,OAAIb,EACKc,KAAKC,MAAMf,GAGX,MAPX,mBAAOC,EAAP,KAAce,EAAd,KAYA,EAAwBL,mBAAS,IAAjC,mBAAON,EAAP,KAAaY,EAAb,KAEA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAoEA,OANAC,qBAAU,WACRV,aAAaW,QAAQ,QAAST,KAAKU,UAAUvB,MAC5C,CAACA,IAKF,qBAAKK,UAAU,MAAf,SAEE,sBAAKA,UAAU,WAAf,UACE,0CACCY,EAEC,uBAAMO,SArBd,SAA0BC,GACxBA,EAAEC,iBAlBJ,SAA0BlB,EAAImB,GAG5B,GAFAC,QAAQC,IAAI,6BAA6BF,GAErCA,EAAYrB,KAAKwB,OAAS,GAAI,CAChC,IAAMC,EAAc/B,EAAMG,KAAI,SAACC,GAC7B,OAAOA,EAAKI,KAAOA,EAAKmB,EAAcvB,KAGxCc,GAAa,GACbH,EAASgB,QAGTC,MAAM,oCAQRC,CAAiBd,EAAYX,GAAIW,IAkBOd,UAAU,YAA5C,UACE,uBACE6B,KAAK,OACLC,MAAOhB,EAAYb,KACnB8B,YAAY,YACZC,SAtDY,SAACZ,GACvBL,EAAe,2BAAKD,GAAN,IAAmBb,KAAMmB,EAAEa,OAAOH,SAChDP,QAAQC,IAAI,4BAA6BV,MAsDjC,gCACE,wBAAQe,KAAK,SAAb,oBACA,wBAAQ3B,QAAS,kBAAMW,GAAa,IAApC,0BAKJ,uBAAMM,SAnFO,SAACC,GACpBA,EAAEC,iBACW,KAATtB,GAAeA,EAAK0B,OAAS,GAC/Bf,EAAS,GAAD,mBAAKf,GAAL,CAAY,CAAEQ,GAAI+B,MAAQjC,KAAMF,MAGxC4B,MAAM,oCAGRhB,EAAQ,KA0E4BX,UAAU,YAAxC,UACE,uBACE6B,KAAK,OACLC,MAAO/B,EACPgC,YAAY,oBACZC,SAAU,SAACZ,GAAD,OAAOT,EAAQS,EAAEa,OAAOH,UAEpC,wBAAQD,KAAK,SAAb,yBAIJ,cAAC,EAAD,CAAOlC,MAAOA,EAAOC,WAlFR,SAACO,GAClB,IAAMgC,EAAUxC,EAAMyC,QAAO,SAACrC,GAC5B,OAAOA,EAAKI,KAAOA,KAGrBO,EAASyB,IA6EwCtC,gBArE3B,SAACE,GACvBc,GAAa,GACbE,EAAe,eAAKhB,aC5CTsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.48f69a6b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport \"./App.css\"\r\n\r\nconst Todos = ({ todos, deleteTodo, handleEditClick }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                todos.map((todo) => (\r\n                    <div key={todo.id} className=\"todo\">\r\n                        <text >{todo.text}</text>\r\n                        <div className=\"buttonPanel\">\r\n                            <button className=\"btn\" onClick={() => handleEditClick(todo)}>Edit</button>\r\n                            <button className=\"btn\" onClick={() => deleteTodo(todo.id)}>Delete</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import react, { useState, useEffect } from 'react';\nimport './App.css';\nimport uuid from 'react-uuid'\nimport Todos from './Todos';\n\nfunction App() {\n\n  //Collection of todos\n  const [todos, setTodos] = useState(() => {\n    const Todos = localStorage.getItem(\"todos\")\n\n    if (Todos) {\n      return JSON.parse(Todos)\n    }\n    else {\n      return []\n    }\n  });\n\n  //Single Todo\n  const [todo, setTodo] = useState(\"\");\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState({});\n\n\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todo !== \"\" && todo.length < 20) {\n      setTodos([...todos, { id: uuid(), text: todo }]);\n    }\n    else {\n      alert(\"todo length must be less than 20\")\n    }\n\n    setTodo(\"\");\n  }\n\n  const deleteTodo = (id) => {\n    const newTodo = todos.filter((todo) => {\n      return todo.id !== id;\n    });\n    // removeItem returns a new array - so now we are setting the todos to the new array\n    setTodos(newTodo);\n  }\n\n  const handleEditInput = (e) => {\n    setCurrentTodo({ ...currentTodo, text: e.target.value });\n    console.log(\"edit=============>>>>>>>>\", currentTodo);\n  }\n\n  const handleEditClick = (todo) => {\n    setIsEditing(true);\n    setCurrentTodo({ ...todo });\n  }\n\n\n  function handleUpdateTodo(id, updatedTodo) {\n    console.log(\"update=============>>>>>>>\",updatedTodo);\n\n    if (updatedTodo.text.length < 30) {\n      const updatedItem = todos.map((todo) => {\n        return todo.id === id ? updatedTodo : todo;\n      });\n\n      setIsEditing(false);\n      setTodos(updatedItem);\n    }\n    else {\n      alert(\"todo length must be less than 30\")\n    }\n\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault();\n\n    handleUpdateTodo(currentTodo.id, currentTodo);\n  }\n\n\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"todoForm\">\n        <h1>TODO APP</h1>\n        {isEditing ?\n\n          <form onSubmit={handleEditSubmit} className=\"todoInput\">\n            <input\n              type=\"text\"\n              value={currentTodo.text}\n              placeholder=\"Edit todo\"\n              onChange={handleEditInput}\n            />\n            <div>\n              <button type=\"submit\">Update</button>\n              <button onClick={() => setIsEditing(false)}>Cancel</button>\n            </div>\n          </form>\n          :\n\n          <form onSubmit={handleSubmit} className=\"todoInput\">\n            <input\n              type=\"text\"\n              value={todo}\n              placeholder=\"Create a new todo\"\n              onChange={(e) => setTodo(e.target.value)}\n            />\n            <button type=\"submit\">Add Todo</button>\n          </form>\n        }\n\n        <Todos todos={todos} deleteTodo={deleteTodo} handleEditClick={handleEditClick} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}